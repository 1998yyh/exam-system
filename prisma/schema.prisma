// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @default(autoincrement())
  username String @db.VarChar(50) @unique
  password String @db.VarChar(50)
  email String @db.VarChar(50)
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt

  exams  Exam[]
  answers Answer[]
}


// npx prisma migrate dev --name exam
// 检测你的 Prisma schema 文件中的更改
// 创建一个新的迁移文件，命名为 "exam"
// 将这个迁移应用到你的数据库
// 重新生成 Prisma 客户端
model Exam {
  id  Int @id @default(autoincrement())
  name String @db.VarChar(50)
  isPublish Boolean @default(false)
  isDelete Boolean @default(false)
  content String @db.Text 
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt

  createUserId Int
  createUser     User  @relation(fields: [createUserId], references: [id])
  
  answers Answer[]
}


model Answer {
  id  Int @id @default(autoincrement())
  content String @db.Text 
  score Int
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt

  answererId Int
  answerer     User  @relation(fields: [answererId], references: [id])

  examId Int
  exam     Exam  @relation(fields: [examId], references: [id])
}